@use "../../abstracts/mixins/breakpoints";
@use "../../abstracts/mixins/hairline";
@use "../../abstracts/mixins/selectors";
@use "../../abstracts/mixins/utilities";
@use "../../abstracts/variables";
@use "../../themes/common";

//
// Note list
// --------------------------------------------------

.note-list {
	.note {
		@include breakpoints.touch-or-bp-down(sm) {
			display: flex;
			padding: variables.$note-list-padding-top variables.$default-padding-x-touch variables.$note-list-padding-bottom;
			@include hairline.hairline(top, "color-shade-4", $start: (2 * variables.$default-padding-x-touch + 28px));

			&:first-child {
				padding-top: variables.$note-list-padding-top - variables.$border-width;
				@include hairline.hairline-disabled(top);
			}

			.icon-note {
				align-self: center;
				margin-right: variables.$default-padding-x-touch;
			}

			.multiline-truncate {
				flex: 1 1 auto;
				@include utilities.multiline-truncate(2);
			}

			.icon-chevron-13 {
				align-self: center;
				transform: rotate(90deg);
				color: common.$note-list-chevron-color;
				margin: 0 (-(variables.$space-min)) 0 (variables.$space-md - 5px);

				@include selectors.state(".editing .note-list") {
					display: none;
				}
			}

			.dropdown {
				align-self: center;
				margin-left: variables.$default-padding-x-touch;
			}
		}

		@include breakpoints.mouse-and-bp-up(md) {
			padding: (variables.$space-md - 5px) variables.$default-padding-x;
			position: relative;

			&:focus {
				outline: none;
			}

			&:first-child {
				@supports not (-webkit-font-smoothing: subpixel-antialiased) {
					padding-top: variables.$space-md - 5px - variables.$border-width;
				}
			}

			&::before,
			&::after {
				position: absolute;
				left: variables.$default-padding-x;
				right: variables.$default-padding-x;
				height: variables.$border-width;
				background-color: common.$note-border-color;
			}

			&::before {
				content: "";
				top: 0;
			}

			&::before {
				@include selectors.state(".note:first-child") {
					@supports not (-webkit-font-smoothing: subpixel-antialiased) {
						html.scrollbar-style-permanent & {
							content: none;
						}
					}
				}
			}

			&::after {
				@include selectors.state(".note:last-child") {
					content: "";
					bottom: 0;
					background-color: transparent;
					box-shadow: 0 1px common.$note-border-color;
				}
			}

			&.selected {
				background-color: common.$note-active-bg;

				&:focus {
					color: common.$note-focus-color;
					background-color: common.$note-focus-bg;
				}

				&::before,
				&::after {
					content: none;
				}

				& + .note {
					border-top: variables.$border-width solid common.$note-active-bg;
					padding-top: variables.$space-md - 6px;

					@include selectors.state(".selected:focus") {
						border-top-color: common.$note-focus-bg;
					}

					&::before {
						content: none;
					}
				}
			}

			.dropdown {
				position: absolute;
				top: 9px;
				right: variables.$default-padding-x - variables.$space-min - variables.$input-border-width;
				opacity: 0.01;

				@include selectors.state(".note:hover", ".dropdown.show", '.note.selected', ".note:focus") {
					opacity: 1;
				}

				@include selectors.state(".note.selected + .note") {
					top: 9px - variables.$border-width;
				}

				.dropdown-toggle {
					background-color: common.$panel-bg;
					transition:
						color variables.$input-btn-transition,
						border-color variables.$input-btn-transition,
						box-shadow variables.$input-btn-transition;

					@include selectors.state(".note.selected") {
						background-color: common.$note-active-bg;
					}

					@include selectors.state(".note.selected:focus-within") {
						background-color: common.$note-focus-bg;

						.icon {
							color: common.$note-focus-color;
						}
					}
				}
			}
		}
	}

	.multiline-truncate {
		@include utilities.multiline-truncate(2);
	}
}
