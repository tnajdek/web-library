@use "../../abstracts/mixins/breakpoints";
@use "../../abstracts/mixins/hairline";
@use "../../abstracts/mixins/same";
@use "../../abstracts/mixins/selectors";
@use "../../abstracts/variables";
@use "../../themes/common";

//
// Item details
// --------------------------------------------------

.item-details {
	display: flex;
	flex-direction: column;
	background: var(--material-sidepane);
	overflow: hidden;

	@include breakpoints.touch-or-bp-down(sm) {
		background: var(--color-shade-1);
	}

	@include breakpoints.bp-down(sm) {
		@include same.same(right, bottom, left, 0);
		top: variables.$touch-header-height;
		position: absolute;
		transform: translate3d(100%, 0, 0);
		transition: transform variables.$nav-transition;
	}

	@include breakpoints.touch-and-bp-only(md) {
		@include same.same(right, bottom, left, 0);
		top: variables.$touch-header-height;
		position: absolute;
		transform: translate3d(100%, 0, 0);
		transition: transform variables.$nav-transition;
	}

		.view-item-details-active & {
		@include breakpoints.bp-down(sm) {
			transform: translate3d(0, 0, 0);
		}

		@include breakpoints.touch-and-bp-only(md) {
			transform: translate3d(0, 0, 0);
		}
	}

		.touch-tag-selector-active & {
		@include breakpoints.bp-down(sm) {
			bottom: -(variables.$touch-footer-height);
		}

		@include breakpoints.touch-and-bp-only(md) {
			bottom: -(variables.$touch-footer-height);
		}
	}

	@include breakpoints.bp-down(xs) {
		top: 0;

		.view-item-details-active & {
			transform: translate3d(25%, 0, 0);
		}

		// Start searching in item details view

		// Init

		.search-active.view-item-details-active & {
			transform: translate3d(0, 0, 0);
			transition: none;
		}

		// Search results

		.search-results.search-init.view-item-list-active & {
			transform: translate3d(100%, 0, 0);
			opacity: 0;
			transition: opacity variables.$fade-transition, transform variables.$fade-transition variables.$fade-transition-duration;
		}

		// Cancel search

		.search-cancel.search-active.view-item-details-active & {
			transform: translate3d(0, 0, 0);
			transition: none;
		}

		@keyframes fade-in-item-details {
			100% {
				opacity: 1;
			}
		}

		.search-cancel.search-results.view-item-details-active & {
			transform: translate3d(0, 0, 0);
			opacity: 0;
			transition: none;
			animation: fade-in-item-details variables.$fade-transition-duration ease-in-out forwards; // We need an animation here to ensure that opacity is 0 at the start.
		}
	}

	@include breakpoints.tablet {

		// Start searching in item details view

		// Search results

		.search-results.view-item-list-active & {
			transform: translate3d(100%, 0, 0);
			opacity: 0;
			transition: transform variables.$nav-transition, opacity 0s linear variables.$nav-transition-duration;
		}

		.search-results.search-init.view-item-list-active & {
			transform: translate3d(100%, 0, 0);
			opacity: 0;
			transition: opacity variables.$fade-transition, transform variables.$fade-transition variables.$fade-transition-duration;
		}

		// Cancel search in item details view (going back to item list view)

		.search-cancel.view-item-list-active & {
			transform: translate3d(100%, 0, 0);
			opacity: 0;
			transition: opacity (variables.$fade-transition-duration - 0.1) ease-in-out, transform 0s linear (variables.$fade-transition-duration - 0.1); // Must be a bit faster than JS class change

			.info-view {
				display: none; // Hack: ideally we would keep showing the item details of a search result
			}
		}

		// Cancel search in item list view (going back to item details view)
		// Used for either .search-init or .search-results set
		.search-cancel.view-item-details-active & {
			transform: translate3d(0, 0, 0);
			opacity: 1;
			transition: opacity variables.$fade-transition;
		}
	}

	@include breakpoints.mouse-and-bp-only(md) {
		flex: 0 0 50%;
		padding-top: variables.$border-width;
	}

	@include breakpoints.mouse-and-bp-only(md) {
		padding-top: 0;
		box-shadow: 0 -1px rgba(#000, 0.1);
		position: relative; // Above odd rows
	}

	@include breakpoints.bp-up-normalized(lg) {
		flex: 0 0 variables.$item-details-width-lg;
		min-width: 0; // Fix truncation
	}

	@include breakpoints.touch-and-bp-only(lg) {
		flex: 0 0 variables.$item-details-width-lg-touch;
		@include hairline.hairline(left, "color-shade-4");
	}

	@include breakpoints.mouse-and-bp-only(lg) {
		border-left: var(--material-border-quarternary);
	}

	.panel {
		transition: transform variables.$nav-transition;

		.view-note-active &,
		.view-attachment-active & {
			@include breakpoints.bp-down(sm) {
				transform: translate3d(-25%, 0, 0);
			}

			@include breakpoints.touch-and-bp-up(md) {
				transform: translate3d(-25%, 0, 0);
			}
		}
	}

	.panel-header {
		@include breakpoints.touch-or-bp-down(sm) {
			display: none;
		}

		.btn-edit {
			position: absolute;
			right: 0;
			top: 0;
			height: calc(100% - #{variables.$border-width});
			padding: 0 variables.$default-padding-x-touch;

			&:focus {
				.keyboard & {
					outline: variables.$outline-width solid common.$focus-color;
					outline-offset: -(variables.$outline-width);
				}
			}
		}
	}

	//.toolbar {
	//	margin: $space-min 0 ($space-md - 2px);
	//}

	// Two column layout for md screens
	@include breakpoints.mouse-and-bp-only(md) {

		// Optimize tabs layout
		.tabs.compact {
			li {
				a {
					padding: 0 variables.$default-padding-x-touch;
				}
			}
		}

		// 2 columns layout
		.row {
			display: flex;
		}

		.col {
			flex: 0 0 50%;
			position: relative;
			min-width: 0; // Fix truncation
		}
	}

	.info-view {
		display: flex;
		justify-content: center;
		align-items: center;
		height: 100%;
		font-size: variables.$info-view-font-size;
		color: common.$info-view-color;
	}
}
